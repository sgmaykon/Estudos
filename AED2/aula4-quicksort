Algoritmo quicksort

quicksort(L,low,high){
	if low < high {
		q = partition(L,low,high)
		quicksort(L,low,q-1)
		quicksort(L,q+1,high)
	}
}

Analise de complexidade 

-Tecnica de recorrencia (Arvore de recorrencia

1.Pior caso: todos sÃ£o maiore ou menires que o pivo

T(n) = t(0) + T(n-1) + O(n)
T(n) = T(n-1) + n

		n ------------------- n
	       /   \
	      0     n-1 --------------- n-1
	           /   \
		  0    n-2 ------------- n-2
		      /    \
		     0      .
			     .
			      .
			       2 --------------- 2
			      /   \
			     0     1 ------------ 1

S = sum(i =1 ate n, i)
S = n(n-1)/2 eh O(n^2)  //

2. Melhor caso: Particoes perfeitamente balanceadas.

	T(n) = T(n/2) + T(n/2) + O(n)
	T(n) = 2T(n/2) + n
	T(n) = n + n


		n ------------------- n
	      /   \
	    n/2    n/2 ---------------  n
            /  \   /  \
	  n/4 n/4 n/4 n/4  ------------  n

E assim sucessivamente ate
	1 1 1 1 111 1 1 1 -------- n*1 = n

Complexidade Eh O(n log2n) //

3. Caso medio: media de todas as possibilidades de particoes(
	sob distruibuicao uniforme)
(1,n-1);(2,n-2);(3,n-3);...; (n-2,2);(n-1,1)

	T(n) = 1/n * sum(i=1 ate n, [T(i-1) + T(n-1)]) + O(n)
	T(n) = 1/n * sum(i=1 ate n, T(i-1)) + 1/n * sum(i=1 ate n, T(n-1)) + cn 
	T(n) = 2*1/n * sum(i=1 ate n, T(i-1)) + cn
	T(n) = 2/n * sum(i=0 ate n-1, T(i)) + cn
	
	nT(n) = 2 * sum(i=0 ate n-1, T(i)) + cn^2 (I)
	(n-1)T(n-1) = 2* sum(i=0 ate n-2, T(i)) + c(n-1)^2  (II)

	nT(n) - (n-1) T(n-1) = 2T(n-1) + 2cn
	nT(n) = 2T(n-1) + nT(n-1) - T(n-1) + 2cn
	nT(n) = T(n-1) + nT(n-1) + 2cn
	nT(n) = (n+1) T(n-1) + 2cn  (divide por n(n+1)
	T(n)/n+1 = T(n-1)/n + 2c/n+1
	
	T(n)/n+1 = T(n-3)/n-2 + 2c/n-1 + 2c/n + 2c/n-1

	T(n)/n+1 = T(1)/2 + 2c/3 + 2c/4 + 2c/5 + ... + 2c/n+1
	T(n)/n+1 = O(1) + 2c * sum(i=3 ate n+1, 1/i)
	T(n)/n+1 =~ O(1) + 2cloge n 
	T(n) =~ nO(1) + 2c n loge n

Complexidade eh O(nlogn)

Vantagem: Quicksort praticamente sempre opera no caso medio!

		n -------------------n
	      /   \
	   1n/10   9/10 n ------------- n
	/    \        /       \
      1n/100 9n/100  9n/100   81/100 n

Nesse caso fica n log10/9 n

S < n log 10/9 

	log 10/9 n = log2 n/ log2 10/9 =~ 6.578 log 2 n	
S < cn log2 n
 --->  O(nlog2 n)


00. Mediana de 3 para escolhe pivo, nos permite alcancar caso medio sempre!
